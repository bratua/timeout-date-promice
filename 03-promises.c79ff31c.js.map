{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAU,KAOd,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,EAAUU,YAAW,KACfN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAdPP,EAAKC,KAAKc,iBAAiB,UAyC3B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMV,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,eAzBpC,UAA4Bb,MAAAc,EAAKH,KAAEA,EAAIC,OAAEA,IACvC,IAAK,IAAIG,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EAGrDjB,EAAciB,EAAUD,GACrBE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBpB,QAAiBC,UAIzCoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBtB,QAAiBC,UAK3Cc,GAASH,EACTW,QAAQC,IAAIT,IAQdU,CAAiB,CACfxB,MAAOyB,OAAOzB,EAAM0B,OACpBf,KAAMc,OAAOd,EAAKe,OAClBd,OAAQa,OAAOb,EAAOc,SAGxBjB,EAAEI,cAAcc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport '../css/common.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet timerId = null;\n\nrefs.form.addEventListener('submit', onSubmit);\n\n// promiseGenerator({ delay: 1000, step: 1000, amount: 50 });\n// console.log(refs.form);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseGenerator({ delay, step, amount }) {\n  for (let position = 1; position <= amount; position += 1) {\n    // console.log(position);\n    // console.log(delay);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n    console.log(delay);\n  }\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget;\n\n  promiseGenerator({\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value),\n  });\n\n  e.currentTarget.reset();\n  // clearTimeout(timerId);\n  // console.log(delay.value, step.value, amount.value);\n}\n\n// createPromise(5, 500)\n// .then(({ position, delay }) => {\n//   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","step","amount","currentTarget","delay1","position1","then","$parcel$interopDefault","Notify","success","catch","failure","console","log","$47d4ff9957288465$var$promiseGenerator","Number","value","reset"],"version":3,"file":"03-promises.c79ff31c.js.map"}